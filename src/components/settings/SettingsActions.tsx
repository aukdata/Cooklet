import React, { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { useNavigation } from '../../contexts/NavigationContext';
import { useToast } from '../../hooks/useToast.tsx';

// УеГт«џсѓбсѓ»сѓисЃДсЃ│сѓ╗сѓ»сѓисЃДсЃ│сѓ│сЃ│сЃЮсЃ╝сЃЇсЃ│сЃѕ
export const SettingsActions: React.FC = () => {
  const { signOut } = useAuth();
  const { navigate } = useNavigation();
  const { showSuccess, showError } = useToast();
  
  // сЃГсЃ╝сѓФсЃФуіХТЁІ
  const [isLoggingOut, setIsLoggingOut] = useState(false);

  // сЃГсѓ░сѓбсѓдсЃѕтЄдуљє
  const handleLogout = async () => {
    const confirmed = window.confirm('сЃГсѓ░сѓбсѓдсЃѕсЂЌсЂЙсЂЎсЂІ№╝Ъ');
    if (!confirmed) return;

    setIsLoggingOut(true);
    try {
      await signOut();
      showSuccess('сЃГсѓ░сѓбсѓдсЃѕсЂЌсЂЙсЂЌсЂЪ');
    } catch (error) {
      console.error('сЃГсѓ░сѓбсѓдсЃѕсѓесЃЕсЃ╝:', error);
      showError('сЃГсѓ░сѓбсѓдсЃѕсЂФтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪ');
    } finally {
      setIsLoggingOut(false);
    }
  };

  // ТЮљТќЎу«Ауљєућ╗жЮбсЂИсЂ«жЂиуД╗
  const handleIngredientManagement = () => {
    navigate('settings/ingredients');
  };

  return (
    <div className="space-y-4">
      {/* ТЮљТќЎУеГт«џ */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
          <span>­ЪЦг</span>
          ТЮљТќЎУеГт«џ
        </h2>
        
        <div className="space-y-3">
          <div className="flex items-center justify-between">
            <div>
              <div className="font-medium text-gray-900">ТЮљТќЎсЃъсѓ╣сѓ┐у«Ауљє</div>
              <div className="text-sm text-gray-600">
                ТќЎуљєсЂДСй┐ућесЂЎсѓІТЮљТќЎсЂ«сЃъсѓ╣сѓ┐сЃЄсЃ╝сѓ┐сѓњу«АуљєсЂЌсЂЙсЂЎ
              </div>
            </div>
            
            <button
              onClick={handleIngredientManagement}
              className="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center gap-2"
            >
              <span>РџЎ№ИЈ</span>
              у«Ауљєућ╗жЮбсЂИ
            </button>
          </div>
        </div>
      </div>

      {/* сѓбсѓФсѓдсЃ│сЃѕсѓбсѓ»сѓисЃДсЃ│ */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
          <span>­Ъћљ</span>
          сѓбсѓФсѓдсЃ│сЃѕ
        </h2>
        
        <div className="space-y-3">
          {/* сЃГсѓ░сѓбсѓдсЃѕсЃюсѓ┐сЃ│ */}
          <div className="flex items-center justify-between">
            <div>
              <div className="font-medium text-gray-900">сЃГсѓ░сѓбсѓдсЃѕ</div>
              <div className="text-sm text-gray-600">
                сѓбсѓФсѓдсЃ│сЃѕсЂІсѓЅсѓхсѓцсЃ│сѓбсѓдсЃѕсЂЌсЂЙсЂЎ
              </div>
            </div>
            
            <button
              onClick={handleLogout}
              disabled={isLoggingOut}
              className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
            >
              {isLoggingOut ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                  сЃГсѓ░сѓбсѓдсЃѕСИГ...
                </>
              ) : (
                <>
                  <span>­Ъџф</span>
                  сЃГсѓ░сѓбсѓдсЃѕ
                </>
              )}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};
